[tool.poetry]
name = "qa-test-generator"
version = "1.0.0"
description = "AI-powered QA Test Case Generator with bilingual support"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.9"
pydantic = "^2.0"
pydantic-settings = "^2.0"
loguru = "^0.7.0"
rich = "^13.0.0"
google-generativeai = "^0.8.0"
openai = "^1.0.0"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
black = "^23.0.0"
isort = "^5.12.0"
mypy = "^1.0.0"
flake8 = "^6.0.0"

[tool.poetry.scripts]
qa-test-generator = "src.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py39']

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --cov=src --cov-report=html --cov-report=term-missing"